name: eslint, csslint, jest, npm test, jslint

on:
  push:
    branches:
      - master
      - refactor
      - 'feature/*'
      - ESlint
  pull_request:
    branches:
      - master

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --force
      
      - name: Install ESLint formatters
        run: npm install --no-fund --no-audit --save-dev @microsoft/eslint-formatter-sarif eslint-formatter-html

      - name: Run eslint
        run: |
          npx eslint --config=tests/eslint_rules.config.mjs -f json -o eslint-report.json || true
          npx eslint --config=tests/eslint_rules.config.mjs -f @microsoft/eslint-formatter-sarif -o eslint-report.sarif || true
        continue-on-error: true

      - name: Upload ESLint SARIF to code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-report.sarif

      - name: Generate HTML report from ESLint JSON
        if: always()
        run: |
          npx eslint-formatter-html eslint-report.json -o eslint-report.html || echo "HTML formatter not available"

      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-html-report
          path: eslint-report.html

      # - name: Run JSLint
      #   run: npx jslint "**/*.js"
      #   continue-on-error: true

      - name: Run Jest
        run: npx jest  # --config=tests/jest.config.js

      - name: Run npm test
        run: npm test

      - name: Install csslint using npm
        run: npm install -g csslint@1.0.5

#      - name: Lint CSS files
#        run: |
#          for file in $(grep -rl --include='*.css' '' ./); do npx csslint --config tests/csslint_rules.json "$file"; done


